window.SIDEBAR_ITEMS = {"macro":[["create_slash_argument","Full version of [`crate::SlashArgument::create`]."],["extract_slash_argument","Full version of [`crate::SlashArgument::extract`]."],["parse_prefix_args","Macro for parsing an argument string into multiple parameter types."],["parse_slash_args","Macro for extracting and parsing slash command arguments out of an array of [`serenity::CommandDataOption`]."],["pop_prefix_argument","Full version of [`crate::PopArgument::pop_from`]."],["slash_argument_choices","Full version of [`crate::SlashArgument::choices`]."]],"mod":[["builtins","Building blocks for common commands like help commands or application command registration"],["cooldown","Infrastructure for command cooldowns"],["dispatch","Contains all code to dispatch incoming events onto framework commands"],["event","Provides a utility `EventHandler` that generates [`Event`] enum instances for incoming events."],["framework","The central Framework struct that ties everything together."],["macros","Procedural macros used in poise, like [`command`]"],["modal","Modal trait and utility items for implementing it (mainly for the derive macro)"],["prefix_argument","Everything related to parsing command arguments from a text message"],["reply","Infrastructure for replying, i.e. sending a message in a command context"],["samples","See [`builtins`]"],["serenity_prelude","This module re-exports a bunch of items from all over serenity. Useful if you canâ€™t remember the full paths of serenity items."],["slash_argument","Application command argument handling code"],["structs","Plain data structs that define the framework configuration."],["track_edits","Tools for implementing automatic edit tracking, i.e. the bot automatically updating its response when the user edits their command invocation message."]],"type":[["BoxFuture","Shorthand for a wrapped async future with a lifetime, used by many parts of this framework."]]};